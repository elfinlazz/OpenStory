//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenStory.Framework.Model.Common {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OpenStory.Server.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot change this module because it has been initialized..
        /// </summary>
        public static string CannotChangeInitializedModule {
            get {
                return ResourceManager.GetString("CannotChangeInitializedModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot expand this container beyond its max capacity..
        /// </summary>
        public static string CannotExpandBeyondMaxCapacity {
            get {
                return ResourceManager.GetString("CannotExpandBeyondMaxCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel identifier must be a non-negative integer..
        /// </summary>
        public static string ChannelIdMustBeNonNegative {
            get {
                return ResourceManager.GetString("ChannelIdMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided item cluster has a different prototype..
        /// </summary>
        public static string DifferentItemClusterPrototype {
            get {
                return ResourceManager.GetString("DifferentItemClusterPrototype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item identifier must be a positive integer..
        /// </summary>
        public static string ItemIdMustBePositive {
            get {
                return ResourceManager.GetString("ItemIdMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The map identifier must be a non-negative integer..
        /// </summary>
        public static string MapIdMustBeNonNegative {
            get {
                return ResourceManager.GetString("MapIdMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module has not been initialized yet..
        /// </summary>
        public static string ModuleNotInitialized {
            get {
                return ResourceManager.GetString("ModuleNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided object instance must be assignable to the type &apos;{0}&apos;.
        /// </summary>
        public static string ObjectNotAssignableToType {
            get {
                return ResourceManager.GetString("ObjectNotAssignableToType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The packet processing event must have a subscriber..
        /// </summary>
        public static string PacketProcessingEventHasNoSubscriber {
            get {
                return ResourceManager.GetString("PacketProcessingEventHasNoSubscriber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is already running..
        /// </summary>
        public static string ServerAlreadyRunning {
            get {
                return ResourceManager.GetString("ServerAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is not running. Start it before using it..
        /// </summary>
        public static string ServerNotRunning {
            get {
                return ResourceManager.GetString("ServerNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided name must be the that of a required or allowed component..
        /// </summary>
        public static string UnknownComponentName {
            get {
                return ResourceManager.GetString("UnknownComponentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided label does not correspond to a known packet..
        /// </summary>
        public static string UnknownPacketLabel {
            get {
                return ResourceManager.GetString("UnknownPacketLabel", resourceCulture);
            }
        }
    }
}
